#!/usr/bin/env python3

import os, sys, imp

if '--debug' in sys.argv:
	sys.argv.remove('--debug')
	os.system('gdb --eval-command=run -q --args python "%s"$*' % sys.argv[0])
	raise SystemExit(0)
if '--pydebug' in sys.argv:
	sys.argv.remove('--pydebug')
	os.system('winpdb "%s"$*' % sys.argv[0])
	raise SystemExit(0)

CWD = os.path.abspath(os.path.join(os.path.dirname(__file__)))
if os.path.isfile(os.path.join(CWD, 'this_is_a_repository')):
	module_path = os.path.normpath(os.path.join(CWD, '../src'))
	print("adding " + module_path + " to sys.path")
	sys.path = [module_path] + sys.path

def init_combrowser():
	import neil.com as com
	import gtk
	# startup python console
	browser = com.get('neil.pythonconsole.dialog', False)
	browser.connect('destroy', lambda widget: gtk.main_quit())
	browser.show_all()
	if len(sys.argv) >= 2:
		for name in sys.argv[1:]:
			import neil.utils
			neil.utils.test_view(name)
	else:
		# startup component browser
		browser = com.get('neil.componentbrowser.dialog', False)
		browser.connect('destroy', lambda widget: gtk.main_quit())
		browser.show_all()

import neil.main
neil.main.run(sys.argv, init_combrowser)

